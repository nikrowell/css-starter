
@mixin bg-cover {
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover;
}

@mixin center {
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%,-50%);
}

@mixin center-x {
  position: absolute;
  left: 50%;
  transform: translateX(-50%);
}

@mixin center-y {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
}

@mixin clearfix {
  &:before, &:after { content: ''; display: table; }
  &:after { clear: both; }
}

@mixin cols($size: '', $count: $column-count, $gap: $column-gap, $margin: $column-margin) {
  @for $i from 1 through $count {
    $width: percentage($i / $count);
    .col#{$size}-#{$i} {
      width: calc(#{$width} - #{$gap});
    }
    .col#{$size}-offset-#{$i} {
      margin-left: calc(#{$width} + #{$margin});
    }
  }
}

@mixin fill {
  content: '';
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
}

@mixin fluid($property, $map) {

  $length: length(map-keys($map));
  @if($length < 2) { @error 'fluid() $map requires at least 2 values' }

  $map: map-sort($map);
  $keys: map-keys($map);
  #{$property}: map-get($map, nth($keys,1));

  @for $i from 1 through ($length - 1) {

    @media (min-width:nth($keys,$i)) {
      $value1: map-get($map, nth($keys,$i));
      $value2: map-get($map, nth($keys,($i + 1)));
      @if ($value1 != $value2) {
        #{$property}: linear-interpolation((nth($keys,$i): $value1, nth($keys,($i+1)): $value2));
      } @else {
        #{$property}: $value1;
      }
    }
  }

  @media (min-width:nth($keys,$length)) {
    #{$property}: map-get($map, nth($keys,$length));
  }
}

@mixin inline-list {
  list-style: none;
  li { display: inline-block; }
}

@mixin no-select {
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  cursor: default;
}

@mixin placeholder {
  $placeholders: ':-webkit-input' ':-moz' '-moz' ':-ms-input' '-ms-input' ':placeholder';
  @each $placeholder in $placeholders {
    &:#{$placeholder}-placeholder { @content; }
  }
}

@mixin scroll-x {
  overflow-x: auto;
  -webkit-overflow-scrolling: touch;
}

@mixin scroll-y {
  overflow-y: auto;
  -webkit-overflow-scrolling: touch;
}

@mixin size($width, $height: $width) {
  width: $width;
  height: $height;
}

@mixin truncate() {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}